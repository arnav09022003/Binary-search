//https://bit.ly/3Ioexjh
int lastOccurence(vector<int>arr,int n,int k){
    int ans=-1,start=0,end=n-1,mid=start+((end-start)/2);
    while(start<=end){
        mid=start+((end-start)/2);
        if(arr[mid]==k){
            ans=mid;
            start=mid+1;
        }
        else if(arr[mid]>k){
            end=mid-1;
        }
        else{
            start=mid+1;
        }
    }
    return ans;
}
int firstOccurence(vector<int>arr,int n,int k){
    int ans=-1,start=0,end=n-1,mid=start+((end-start)/2);
    while(start<=end){
        mid=start+((end-start)/2);
        if(arr[mid]==k){
            ans=mid;
            end=mid-1;
        }
        else if(arr[mid]>k){
            end=mid-1;
        }
        else{
            start=mid+1;
        }
    }
    return ans;
}
pair<int, int> firstAndLastPosition(vector<int>&arr,int n,int k)
{
    pair<int,int>p;
    p.first=firstOccurence(arr,n,k);
    p.second=lastOccurence(arr,n,k);
    return p;
}
